apply plugin: 'com.android.application'
apply plugin: 'android-apt'

android {
    compileSdkVersion 24
    buildToolsVersion "23.0.3"
    defaultConfig {
        applicationId "br.com.example.android.popularmovies"
        minSdkVersion 16
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        //This flavor is used to recover data from the movies DB API
        //If you want to recover real data from the Web, go to https://www.themoviedb.org/ and create yours.
        //Your API key should be on your local.properties gradle file under the name movies.db.key
        realData {
            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())

            String moviesDBKey = properties.getProperty('movies.db.key');
            if (moviesDBKey == null) {
                moviesDBKey = ""
            }

            it.buildConfigField 'String', 'MOVIES_DB_API_KEY', moviesDBKey
        }
        mockData {}
    }
}

dependencies {
    def testVersion = "4.12"
    def supportVersion = "24.2.1"
    def picassoVersion = "2.5.2"
    def retrofitVersion = "2.1.0"
    def gsonVersion = "2.4"
    def daggerVersion = "2.7"
    def supportTestRulesVersion = "0.5"
    def espressoVersion = "2.2.2"
    def rxandroidVersion = "1.2.1"
    def rxjavaVersion = "1.1.6"
    def jsrVersion = "1.0"

    testCompile "junit:junit:$testVersion"

    compile "com.android.support:appcompat-v7:$supportVersion"
    compile "com.android.support:design:$supportVersion"
    compile "com.android.support:cardview-v7:$supportVersion"
    compile "com.android.support:recyclerview-v7:$supportVersion"
    compile "com.android.support:support-v4:$supportVersion"

    compile "com.squareup.picasso:picasso:$picassoVersion"
    compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava:$retrofitVersion"
    compile "com.google.code.gson:gson:$gsonVersion"
    compile "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // apt command comes from the android-apt plugin
    apt "com.google.dagger:dagger-compiler:$daggerVersion"
    compile "com.google.dagger:dagger:$daggerVersion"
    provided "javax.annotation:jsr250-api:$jsrVersion"

    // Android Testing Support Library's runner and rules
    androidTestCompile "com.android.support.test:runner:$supportTestRulesVersion"
    androidTestCompile "com.android.support.test:rules:$supportTestRulesVersion"

    // Espresso UI Testing
    androidTestCompile "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:$espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$espressoVersion"

    //Resolve test conflicts
    androidTestCompile "com.android.support:appcompat-v7:$supportVersion"
    androidTestCompile "com.android.support:design:$supportVersion"
    androidTestCompile "com.android.support:cardview-v7:$supportVersion"
    androidTestCompile "com.android.support:recyclerview-v7:$supportVersion"
    androidTestCompile "com.android.support:support-v4:$supportVersion"

    compile "io.reactivex:rxandroid:$rxandroidVersion"
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    compile "io.reactivex:rxjava:$rxjavaVersion"
}


